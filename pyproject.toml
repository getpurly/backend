[project]
name = "backend"
version = "0.1.0"
description = "backend"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "django>=5.2.3",
    "django-allauth>=65.10.0",
    "django-allauth-ui>=1.8.1",
    "django-cors-headers>=4.7.0",
    "django-filter>=25.1",
    "django-widget-tweaks>=1.5.0",
    "djangorestframework>=3.16.0",
    "drf-spectacular>=0.28.0",
    "psycopg2>=2.9.10",
    "slippers>=0.6.2",
]

[dependency-groups]
dev = ["django-silk>=5.4.0", "faker>=37.4.0", "ruff>=0.11.13"]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN",    # flake8-annotations
    "COM",    # flake8-commas
    "ARG001", # Unused function argument
    "ARG002", # Unused method argument
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D106",   # Missing docstring in public nested class
    "D107",   # Missing docstring in `__init__`
    "C901",   # Function is too complex (> 10)
    "RUF012", # Mutable class attributes should be annotated with typing.ClassVar
    "TRY003", # Avoid specifying long messages outside the exception class
    "EM101",  # Exception must not use a string literal, assign to variable first
    "EM102",  # Exception must not use an f-string literal, assign to variable first
    "PT009",  # Use a regular `assert` instead of unittest-style `assertEqual
    "S311",   # Standard pseudo-random generators are not suitable for cryptographic purposes
    "PGH003", # Use specific rule codes when ignoring type issues
    "DJ007",  # Do not use `__all__` with `ModelForm`, use `fields` instead
    "SLF001", # Private member accessed: `_meta`
]
exclude = ["migrations"]

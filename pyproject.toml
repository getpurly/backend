[project]
name = "backend"
version = "0.1.0"
description = "backend"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "celery>=5.5.3",
    "django-allauth-ui>=1.8.1",
    "django-allauth>=65.11.2",
    "django-anymail[amazon-ses]>=13.1",
    "django-cors-headers>=4.9.0",
    "django-filter>=25.1",
    "django-redis>=6.0.0",
    "django-widget-tweaks>=1.5.0",
    "django[argon2]>=5.2.3",
    "djangorestframework>=3.16.0",
    "drf-spectacular>=0.28.0",
    "gunicorn>=23.0.0",
    "psycopg2>=2.9.10",
    "sentry-sdk[django]>=2.39.0",
    "slippers>=0.6.2",
    "whitenoise>=6.11.0",
]

[dependency-groups]
dev = ["django-silk>=5.4.3", "faker>=37.8.0", "ruff>=0.13.2"]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN",     # flake8-annotations
    "ARG001",  # Unused function argument
    "ARG002",  # Unused method argument
    "C901",    # Function is too complex (> 10)
    "COM",     # flake8-commas
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D105",    # Missing docstring in magic method
    "D106",    # Missing docstring in public nested class
    "D107",    # Missing docstring in `__init__`
    "DJ007",   # Do not use `__all__` with `ModelForm`, use `fields` instead
    "EM101",   # Exception must not use a string literal, assign to variable first
    "EM102",   # Exception must not use an f-string literal, assign to variable first
    "FBT002",  # Boolean default positional argument in function definition
    "PGH003",  # Use specific rule codes when ignoring type issues
    "PLC0415", # `import` should be at the top-level of a file
    "PT009",   # Use a regular `assert` instead of unittest-style `assertEqual`
    "RUF012",  # Mutable class attributes should be annotated with typing.ClassVar
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "SLF001",  # Private member accessed: `_meta`
    "TRY003",  # Avoid specifying long messages outside the exception class
]
exclude = ["migrations"]
